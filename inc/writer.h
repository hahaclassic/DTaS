#ifndef __WRITER_H__
#define __WRITER_H__

#include <stdio.h>
#include <string.h>
#include "tree.h"
#include "stats.h"

#define SEARCH_STAT_TABLE   "\n=========================================================================================\n" \
                            "|                            Сравнение эффективности                                    |\n" \
                            "-----------------------------------------------------------------------------------------\n" \
                            "|               Поиск                       |      Время, мкс      |  Кол-во сравнений  |\n" \
                            "|---------------------------------------------------------------------------------------|\n" \
                            "| В хеш-таблице с открытой адресацией       | %-20lld | %-18zu |\n" \
                            "|---------------------------------------------------------------------------------------|\n" \
                            "| В хеш-таблице с закрытой адресацией       | %-20lld | %-18zu |\n" \
                            "|---------------------------------------------------------------------------------------|\n" \
                            "| В бинарном дереве поиска                  | %-20lld | %-18zu |\n" \
                            "|---------------------------------------------------------------------------------------|\n" \
                            "| В сбалансированном бинарном дереве поиска | %-20lld | %-18zu |\n" \
                            "=========================================================================================\n" 

#define AVG_SEARCH_STAT_TABLE   "\n=========================================================================================\n" \
                                "|                            Сравнение эффективности                                    |\n" \
                                "-----------------------------------------------------------------------------------------\n" \
                                "|               Поиск                       |      Время, мкс      |  Кол-во сравнений  |\n" \
                                "|---------------------------------------------------------------------------------------|\n" \
                                "| В хеш-таблице с открытой адресацией       | %-20lf | %-18lf |\n" \
                                "|---------------------------------------------------------------------------------------|\n" \
                                "| В хеш-таблице с закрытой адресацией       | %-20lf | %-18lf |\n" \
                                "|---------------------------------------------------------------------------------------|\n" \
                                "| В бинарном дереве поиска                  | %-20lf | %-18lf |\n" \
                                "|---------------------------------------------------------------------------------------|\n" \
                                "| В сбалансированном бинарном дереве поиска | %-20lf | %-18lf |\n" \
                                "=========================================================================================\n" 

#define RESTRUCT_STAT_TABLE "\n=========================================================================================\n" \
                            "|                            Сравнение эффективности                                    |\n" \
                            "-----------------------------------------------------------------------------------------\n" \
                            "|            Реструктурирование             |                  Время, мкс               |\n" \
                            "|---------------------------------------------------------------------------------------|\n" \
                            "| Хеш-таблица с открытой адресацией         |            %-20lld           |\n" \
                            "|---------------------------------------------------------------------------------------|\n" \
                            "| Хеш-таблица с закрытой адресацией         |            %-20lld           |\n" \
                            "=========================================================================================\n" 

#define MEMORY_STAT_TABLE   "\n=========================================================================================\n" \
                            "|                    Сравнение затрат памяти. Кол-во элементов: %-10zu              |\n" \
                            "-----------------------------------------------------------------------------------------\n" \
                            "|               Структура                   | Размер массива* | Объем памяти (в байтах) |\n" \
                            "|---------------------------------------------------------------------------------------|\n" \
                            "| В хеш-таблице с открытой адресацией       | %-15zu | %-23zu |\n" \
                            "|---------------------------------------------------------------------------------------|\n" \
                            "| В хеш-таблице с закрытой адресацией       | %-15zu | %-23zu |\n" \
                            "|---------------------------------------------------------------------------------------|\n" \
                            "| В бинарном дереве поиска                  | %-15zu | %-23zu |\n" \
                            "|---------------------------------------------------------------------------------------|\n" \
                            "| В сбалансированном бинарном дереве поиска | %-15zu | %-23zu |\n" \
                            "=========================================================================================\n" \
                            "* - Для дерева подразумевается количество узлов.\n\n"

#define TREE "./out/tree.dot"
#define BALANCED_TREE "./out/balanced_tree.dot"

#define BLUE "\033[36m"
#define CANCEL "\033[0m"

void create_png_trees(tree_node_t *tree, tree_node_t *balanced_tree);

void show_search_stats(search_stats_t *stats);

void show_restruct_stats(restruct_stats_t *stats);

void show_memory_stats(memory_stats_t *stats);

void show_avg_search_stats(avg_search_stats_t *stats);

#endif
